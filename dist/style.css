/*!***************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles/main.scss ***!
  \***************************************************************************************************************/
.flowchart-settings .flowchart-container {
  display: flex;
  flex-direction: column;
  gap: 12px;
}
.flowchart-settings .setting-row {
  display: flex;
  flex-direction: column;
  gap: 6px;
}
.flowchart-settings .setting-row:last-child {
  margin-top: 10px;
}
.flowchart-settings .setting-row button {
  align-self: flex-start;
}

.popup:has(.flowchart-data-popup) {
  overflow-y: auto;
  max-width: 70% !important;
  width: 100%;
}

.flowchart-errors {
  color: var(--warning);
  margin-bottom: 5px;
  border: 1px solid var(--warning);
  padding: 5px;
  border-radius: 4px;
  max-height: 100px;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  font-size: 0.9em;
}
.flowchart-errors .flowchart-errors-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.flowchart-errors .flowchart-errors-header button {
  padding: 2px 8px;
  font-size: 12px;
  flex-shrink: 0;
}
.flowchart-errors ul {
  margin-top: 2px;
  padding-left: 20px;
  margin-bottom: 0;
}

.flowchart-data-popup {
  display: flex;
  flex-direction: column;
  height: 100%;
  gap: 10px;
  overflow: hidden;
}
.flowchart-data-popup button.menu_button.interactable {
  width: unset;
}
.flowchart-data-popup .flowchart-popup-header {
  border-bottom: 1px solid var(--SmartThemeBorderColor);
  padding-bottom: 5px;
  flex-shrink: 0;
}
.flowchart-data-popup .flowchart-popup-header h2 {
  margin: 0;
}
.flowchart-data-popup .flowchart-popup-tabs {
  display: flex;
  gap: 5px;
  margin-top: 5px;
}
.flowchart-data-popup .flowchart-popup-content {
  flex-grow: 1;
  overflow: hidden;
  position: relative;
  display: flex;
  flex-direction: column;
}
.flowchart-data-popup .flowchart-popup-content > .flowchart-popup-section {
  overflow-y: auto;
  height: 100%;
  padding-right: 5px;
}
.flowchart-data-popup .flowchart-popup-content details {
  border: 1px solid var(--SmartThemeBorderColor);
  border-radius: 4px;
  padding: 8px;
  margin-bottom: 10px;
}
.flowchart-data-popup .flowchart-popup-content summary {
  font-weight: bold;
  cursor: pointer;
  margin-bottom: 5px;
}
.flowchart-data-popup .flowchart-popup-section .setting-row {
  display: flex;
  flex-direction: column;
  gap: 5px;
  margin-bottom: 15px;
}
.flowchart-data-popup .flowchart-popup-footer {
  border-top: 1px solid var(--SmartThemeBorderColor);
  padding-top: 10px;
  text-align: right;
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  flex-shrink: 0;
}

.react-flow__pane.draggable,
.react-flow__node.draggable {
  bottom: unset;
  display: unset;
  overflow: unset;
  min-width: unset;
  min-height: unset;
  max-width: unset;
  max-height: unset;
  width: unset;
  filter: unset;
  border: unset;
  border-radius: unset;
  padding: unset;
  background-color: unset;
  text-align: initial;
}

.react-flow__node {
  width: unset !important;
}

.react-flow svg {
  overflow: visible;
}

.flowchart-ground-manager {
  display: flex;
  flex-direction: column;
  height: 100%;
  gap: 5px;
  overflow: hidden;
}

.flowchart-preset-selector {
  flex-shrink: 0;
}

.flowchart-editor-area {
  display: flex;
  flex-grow: 1;
  border: 1px solid var(--SmartThemeBorderColor);
  border-radius: 4px;
  overflow: hidden;
  position: relative;
}

.flowchart-node-palette {
  width: 200px;
  background-color: var(--SmartThemeBlurTintColor);
  border-right: 1px solid var(--SmartThemeBorderColor);
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  z-index: 10;
}
.flowchart-node-palette .palette-header {
  padding: 10px;
  border-bottom: 1px solid var(--SmartThemeBorderColor);
  background: var(--SmartThemeHeadersBackgroundColor);
}
.flowchart-node-palette .palette-header h3 {
  margin: 0 0 5px 0;
  font-size: 1.1em;
}
.flowchart-node-palette .palette-header .palette-search {
  width: 100%;
  font-size: 0.9em;
}
.flowchart-node-palette .palette-categories {
  overflow-y: auto;
  flex-grow: 1;
}
.flowchart-node-palette .palette-category {
  position: relative;
}
.flowchart-node-palette .palette-category .category-label {
  padding: 10px;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid var(--SmartThemeBorderColor);
  transition: background-color 0.2s;
  font-weight: 600;
}
.flowchart-node-palette .palette-category .category-label .fa-chevron-right {
  font-size: 0.8em;
  opacity: 0.5;
}
.flowchart-node-palette .palette-category .category-label:hover {
  background-color: var(--SmartThemeHoverColor);
  color: var(--SmartThemeHoverTextStyle);
}
.flowchart-node-palette .palette-category .category-nodes {
  display: none;
  position: absolute;
  left: 100%;
  top: 0;
  width: 220px;
  background-color: var(--background-color-modal);
  border: 1px solid var(--SmartThemeBorderColor);
  box-shadow: 2px 2px 10px var(--SmartThemeShadowColor);
  z-index: 20;
  border-radius: 0 4px 4px 0;
  max-height: 400px;
  overflow-y: auto;
}
.flowchart-node-palette .palette-category .category-nodes .category-nodes-list {
  padding: 5px;
  display: flex;
  flex-direction: column;
  gap: 2px;
}
.flowchart-node-palette .palette-category:hover .category-label {
  background-color: var(--SmartThemeHoverColor);
  color: var(--SmartThemeHoverTextStyle);
}
.flowchart-node-palette .palette-category:hover .category-nodes {
  display: flex;
  flex-direction: column;
  position: sticky;
}
.flowchart-node-palette .node-item {
  padding: 6px 10px;
  background-color: var(--SmartThemeInputColor);
  border: 1px solid var(--SmartThemeBorderColor);
  border-radius: 4px;
  cursor: grab;
  font-size: 0.9em;
  text-align: left;
  transition: all 0.1s;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.flowchart-node-palette .node-item:hover {
  background-color: var(--SmartThemeHoverColor);
  border-color: var(--SmartThemeEmColor);
  transform: translateX(2px);
}
.flowchart-node-palette .node-item:active {
  cursor: grabbing;
}

.flowchart-popup-ground {
  flex-grow: 1;
  height: 100%;
  width: 100%;
  background-color: var(--grey10);
}

.react-flow__node.flow-node-invalid > div {
  border: 2px solid var(--warning) !important;
  box-shadow: 0 0 5px var(--warning);
}

.execution-order-badge {
  position: absolute;
  top: 0;
  left: 0;
  background-color: var(--primary-color);
  color: var(--text-color-black);
  border-radius: 50%;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 11px;
  font-weight: bold;
  z-index: 10;
  border: 1px solid var(--black50a);
}

.react-flow__node .run-completed,
.react-flow__node.flow-node-success > div {
  box-shadow: 0 0 10px var(--success);
}

.react-flow__node .run-error,
.react-flow__node.flow-node-error > div {
  box-shadow: 0 0 10px var(--danger);
}

@keyframes pulse-blue {
  0% {
    box-shadow: 0 0 0 0 color-mix(in srgb, var(--primary-color, #007bff) 70%, transparent);
  }
  70% {
    box-shadow: 0 0 10px 10px transparent;
  }
  100% {
    box-shadow: 0 0 0 0 transparent;
  }
}
.react-flow__node.flow-node-executing > div {
  border-color: var(--primary-color, #007bff) !important;
  animation: pulse-blue 1.5s infinite;
}

.flowchart-history-list {
  list-style: none;
  padding: 0;
  text-align: initial;
}
.flowchart-history-list li {
  margin-bottom: 10px;
}
.flowchart-history-list li details {
  padding: 8px;
}
.flowchart-history-list li details pre {
  background-color: var(--SmartThemeBlurTintColor);
  padding: 10px;
  border-radius: 4px;
  margin-top: 10px;
  max-height: 300px;
  overflow: auto;
  white-space: pre-wrap;
  word-break: break-all;
  font-size: 0.85em;
}
.flowchart-history-list li .flow-history-error {
  background-color: color-mix(in srgb, var(--warning) 10%, transparent);
  border: 1px solid var(--warning);
  padding: 8px;
  border-radius: 4px;
  margin-top: 5px;
}
.flowchart-history-list li .flow-history-error strong {
  color: var(--warning);
}
.flowchart-history-list li .flow-history-error pre {
  margin-top: 5px;
  background-color: color-mix(in srgb, var(--warning) 5%, transparent);
  max-height: 100px;
}

.flowchart-context-menu {
  position: absolute;
  background: var(--SmartThemeChatTintColor, var(--background-color-modal));
  border: 1px solid var(--SmartThemeBorderColor);
  border-radius: 6px;
  box-shadow: 0 4px 12px var(--SmartThemeShadowColor);
  z-index: 10000;
  min-width: 240px;
  max-height: 300px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  font-family: var(--mainFontFamily);
  font-size: calc(var(--mainFontSize) * 0.95);
}
.flowchart-context-menu .context-menu-search-wrapper {
  padding: 8px;
  border-bottom: 1px solid var(--SmartThemeBorderColor);
  flex-shrink: 0;
  background-color: var(--SmartThemeBlurTintColor);
}
.flowchart-context-menu .context-menu-search-wrapper input.text_pole {
  margin: 0;
  width: 100%;
}
.flowchart-context-menu ul {
  list-style: none;
  padding: 4px;
  margin: 0;
  overflow-y: auto;
  flex-grow: 1;
}
.flowchart-context-menu li {
  padding: 8px 12px;
  cursor: pointer;
  border-radius: 4px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: var(--text-color-main);
  transition: background-color 150ms ease-out, color 150ms ease-out;
}
.flowchart-context-menu li:not(:last-child) {
  margin-bottom: 2px;
}
.flowchart-context-menu li:hover {
  background: var(--SmartThemeHoverColor, var(--primary-color));
  color: var(--SmartThemeHoverTextStyle, var(--text-color-black));
}
.flowchart-context-menu li.no-results {
  cursor: default;
  color: var(--grey50);
  text-align: center;
  padding: 12px;
}
.flowchart-context-menu li.no-results:hover {
  background: transparent;
  color: var(--grey50);
}

.react-flow__minimap {
  background-color: var(--SmartThemeBlurTintColor) !important;
  border: 1px solid var(--SmartThemeBorderColor);
  border-radius: 4px;
}

.react-flow__minimap-mask {
  fill: var(--background-color) !important;
  fill-opacity: 0.7 !important;
}

.react-flow__minimap-node {
  fill: var(--SmartThemeEmColor) !important;
  stroke: none !important;
}

.flow-group-node {
  width: 100%;
  height: 100%;
  border: 2px dashed var(--white30a);
  border-radius: 8px;
  background-color: rgba(255, 255, 255, 0.05);
  pointer-events: none;
  transition: all 0.2s;
}
.react-flow__node.selected .flow-group-node {
  border-color: var(--SmartThemeEmColor);
  background-color: color-mix(in srgb, var(--SmartThemeEmColor) 10%, transparent);
}
.flow-group-node .flow-group-node-label {
  background: transparent;
  color: var(--text-color-main);
  border: none;
  padding: 5px 10px;
  width: 100%;
  font-weight: bold;
  font-size: 1.2em;
  opacity: 0.5;
  pointer-events: all;
}
.flow-group-node .flow-group-node-label:focus {
  opacity: 1;
  background: var(--black50a);
}

.node-run-report {
  margin-top: 10px;
  border-top: 1px solid #555;
  padding-top: 5px;
}
.node-run-report summary {
  cursor: pointer;
  font-size: 0.9em;
  color: var(--text-color-secondary);
}
.node-run-report summary .status-completed {
  color: var(--success);
  font-weight: bold;
}
.node-run-report summary .status-error {
  color: var(--danger);
  font-weight: bold;
}
.node-run-report .report-content {
  margin-top: 5px;
}
.node-run-report .report-error {
  background: var(--danger-transparent);
  border: 1px solid var(--danger);
  color: var(--danger);
  padding: 5px;
  border-radius: 3px;
  white-space: pre-wrap;
  font-size: 0.85em;
}
.node-run-report .report-tabs {
  display: flex;
  gap: 5px;
  margin: 5px 0;
}
.node-run-report .report-tabs button {
  padding: 2px 8px;
  font-size: 11px;
}
.node-run-report .report-tabs button.active {
  background: var(--primary-color);
  color: var(--text-color-black);
}
.node-run-report .report-data {
  background: #2a2a2a;
  padding: 5px;
  border-radius: 3px;
  max-height: 150px;
  overflow: auto;
  font-size: 0.85em;
  white-space: pre-wrap;
  word-break: break-all;
}
/*!************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/@xyflow/react/dist/style.css ***!
  \************************************************************************************************************************************/
/* this gets exported as style.css and can be used for the default theming */
/* these are the necessary styles for React/Svelte Flow, they get used by base.css and style.css */
.react-flow {
  direction: ltr;
  --xy-edge-stroke-default: #b1b1b7;
  --xy-edge-stroke-width-default: 1;
  --xy-edge-stroke-selected-default: #555;
  --xy-connectionline-stroke-default: #b1b1b7;
  --xy-connectionline-stroke-width-default: 1;
  --xy-attribution-background-color-default: rgba(255, 255, 255, 0.5);
  --xy-minimap-background-color-default: #fff;
  --xy-minimap-mask-background-color-default: rgba(240, 240, 240, 0.6);
  --xy-minimap-mask-stroke-color-default: transparent;
  --xy-minimap-mask-stroke-width-default: 1;
  --xy-minimap-node-background-color-default: #e2e2e2;
  --xy-minimap-node-stroke-color-default: transparent;
  --xy-minimap-node-stroke-width-default: 2;
  --xy-background-color-default: transparent;
  --xy-background-pattern-dots-color-default: #91919a;
  --xy-background-pattern-lines-color-default: #eee;
  --xy-background-pattern-cross-color-default: #e2e2e2;
  background-color: var(--xy-background-color, var(--xy-background-color-default));
  --xy-node-color-default: inherit;
  --xy-node-border-default: 1px solid #1a192b;
  --xy-node-background-color-default: #fff;
  --xy-node-group-background-color-default: rgba(240, 240, 240, 0.25);
  --xy-node-boxshadow-hover-default: 0 1px 4px 1px rgba(0, 0, 0, 0.08);
  --xy-node-boxshadow-selected-default: 0 0 0 0.5px #1a192b;
  --xy-node-border-radius-default: 3px;
  --xy-handle-background-color-default: #1a192b;
  --xy-handle-border-color-default: #fff;
  --xy-selection-background-color-default: rgba(0, 89, 220, 0.08);
  --xy-selection-border-default: 1px dotted rgba(0, 89, 220, 0.8);
  --xy-controls-button-background-color-default: #fefefe;
  --xy-controls-button-background-color-hover-default: #f4f4f4;
  --xy-controls-button-color-default: inherit;
  --xy-controls-button-color-hover-default: inherit;
  --xy-controls-button-border-color-default: #eee;
  --xy-controls-box-shadow-default: 0 0 2px 1px rgba(0, 0, 0, 0.08);
  --xy-edge-label-background-color-default: #ffffff;
  --xy-edge-label-color-default: inherit;
  --xy-resize-background-color-default: #3367d9;
}

.react-flow.dark {
  --xy-edge-stroke-default: #3e3e3e;
  --xy-edge-stroke-width-default: 1;
  --xy-edge-stroke-selected-default: #727272;
  --xy-connectionline-stroke-default: #b1b1b7;
  --xy-connectionline-stroke-width-default: 1;
  --xy-attribution-background-color-default: rgba(150, 150, 150, 0.25);
  --xy-minimap-background-color-default: #141414;
  --xy-minimap-mask-background-color-default: rgba(60, 60, 60, 0.6);
  --xy-minimap-mask-stroke-color-default: transparent;
  --xy-minimap-mask-stroke-width-default: 1;
  --xy-minimap-node-background-color-default: #2b2b2b;
  --xy-minimap-node-stroke-color-default: transparent;
  --xy-minimap-node-stroke-width-default: 2;
  --xy-background-color-default: #141414;
  --xy-background-pattern-dots-color-default: #777;
  --xy-background-pattern-lines-color-default: #777;
  --xy-background-pattern-cross-color-default: #777;
  --xy-node-color-default: #f8f8f8;
  --xy-node-border-default: 1px solid #3c3c3c;
  --xy-node-background-color-default: #1e1e1e;
  --xy-node-group-background-color-default: rgba(240, 240, 240, 0.25);
  --xy-node-boxshadow-hover-default: 0 1px 4px 1px rgba(255, 255, 255, 0.08);
  --xy-node-boxshadow-selected-default: 0 0 0 0.5px #999;
  --xy-handle-background-color-default: #bebebe;
  --xy-handle-border-color-default: #1e1e1e;
  --xy-selection-background-color-default: rgba(200, 200, 220, 0.08);
  --xy-selection-border-default: 1px dotted rgba(200, 200, 220, 0.8);
  --xy-controls-button-background-color-default: #2b2b2b;
  --xy-controls-button-background-color-hover-default: #3e3e3e;
  --xy-controls-button-color-default: #f8f8f8;
  --xy-controls-button-color-hover-default: #fff;
  --xy-controls-button-border-color-default: #5b5b5b;
  --xy-controls-box-shadow-default: 0 0 2px 1px rgba(0, 0, 0, 0.08);
  --xy-edge-label-background-color-default: #141414;
  --xy-edge-label-color-default: #f8f8f8;
}

.react-flow__background {
  background-color: var(--xy-background-color-props, var(--xy-background-color, var(--xy-background-color-default)));
  pointer-events: none;
  z-index: -1;
}

.react-flow__container {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}

.react-flow__pane {
  z-index: 1;
}

.react-flow__pane.draggable {
  cursor: grab;
}

.react-flow__pane.dragging {
  cursor: grabbing;
}

.react-flow__pane.selection {
  cursor: pointer;
}

.react-flow__viewport {
  transform-origin: 0 0;
  z-index: 2;
  pointer-events: none;
}

.react-flow__renderer {
  z-index: 4;
}

.react-flow__selection {
  z-index: 6;
}

.react-flow__nodesselection-rect:focus,
.react-flow__nodesselection-rect:focus-visible {
  outline: none;
}

.react-flow__edge-path {
  stroke: var(--xy-edge-stroke, var(--xy-edge-stroke-default));
  stroke-width: var(--xy-edge-stroke-width, var(--xy-edge-stroke-width-default));
  fill: none;
}

.react-flow__connection-path {
  stroke: var(--xy-connectionline-stroke, var(--xy-connectionline-stroke-default));
  stroke-width: var(--xy-connectionline-stroke-width, var(--xy-connectionline-stroke-width-default));
  fill: none;
}

.react-flow .react-flow__edges {
  position: absolute;
}

.react-flow .react-flow__edges svg {
  overflow: visible;
  position: absolute;
  pointer-events: none;
}

.react-flow__edge {
  pointer-events: visibleStroke;
}

.react-flow__edge.selectable {
  cursor: pointer;
}

.react-flow__edge.animated path {
  stroke-dasharray: 5;
  animation: dashdraw 0.5s linear infinite;
}

.react-flow__edge.animated path.react-flow__edge-interaction {
  stroke-dasharray: none;
  animation: none;
}

.react-flow__edge.inactive {
  pointer-events: none;
}

.react-flow__edge.selected,
.react-flow__edge:focus,
.react-flow__edge:focus-visible {
  outline: none;
}

.react-flow__edge.selected .react-flow__edge-path,
.react-flow__edge.selectable:focus .react-flow__edge-path,
.react-flow__edge.selectable:focus-visible .react-flow__edge-path {
  stroke: var(--xy-edge-stroke-selected, var(--xy-edge-stroke-selected-default));
}

.react-flow__edge-textwrapper {
  pointer-events: all;
}

.react-flow__edge .react-flow__edge-text {
  pointer-events: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

/* Arrowhead marker styles - use CSS custom properties as default */
.react-flow__arrowhead polyline {
  stroke: var(--xy-edge-stroke, var(--xy-edge-stroke-default));
}

.react-flow__arrowhead polyline.arrowclosed {
  fill: var(--xy-edge-stroke, var(--xy-edge-stroke-default));
}

.react-flow__connection {
  pointer-events: none;
}

.react-flow__connection .animated {
  stroke-dasharray: 5;
  animation: dashdraw 0.5s linear infinite;
}

svg.react-flow__connectionline {
  z-index: 1001;
  overflow: visible;
  position: absolute;
}

.react-flow__nodes {
  pointer-events: none;
  transform-origin: 0 0;
}

.react-flow__node {
  position: absolute;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  pointer-events: all;
  transform-origin: 0 0;
  box-sizing: border-box;
  cursor: default;
}

.react-flow__node.selectable {
  cursor: pointer;
}

.react-flow__node.draggable {
  cursor: grab;
  pointer-events: all;
}

.react-flow__node.draggable.dragging {
  cursor: grabbing;
}

.react-flow__nodesselection {
  z-index: 3;
  transform-origin: left top;
  pointer-events: none;
}

.react-flow__nodesselection-rect {
  position: absolute;
  pointer-events: all;
  cursor: grab;
}

.react-flow__handle {
  position: absolute;
  pointer-events: none;
  min-width: 5px;
  min-height: 5px;
  width: 6px;
  height: 6px;
  background-color: var(--xy-handle-background-color, var(--xy-handle-background-color-default));
  border: 1px solid var(--xy-handle-border-color, var(--xy-handle-border-color-default));
  border-radius: 100%;
}

.react-flow__handle.connectingfrom {
  pointer-events: all;
}

.react-flow__handle.connectionindicator {
  pointer-events: all;
  cursor: crosshair;
}

.react-flow__handle-bottom {
  top: auto;
  left: 50%;
  bottom: 0;
  transform: translate(-50%, 50%);
}

.react-flow__handle-top {
  top: 0;
  left: 50%;
  transform: translate(-50%, -50%);
}

.react-flow__handle-left {
  top: 50%;
  left: 0;
  transform: translate(-50%, -50%);
}

.react-flow__handle-right {
  top: 50%;
  right: 0;
  transform: translate(50%, -50%);
}

.react-flow__edgeupdater {
  cursor: move;
  pointer-events: all;
}

.react-flow__pane.selection .react-flow__panel {
  pointer-events: none;
}

.react-flow__panel {
  position: absolute;
  z-index: 5;
  margin: 15px;
}

.react-flow__panel.top {
  top: 0;
}

.react-flow__panel.bottom {
  bottom: 0;
}

.react-flow__panel.top.center, .react-flow__panel.bottom.center {
  left: 50%;
  transform: translateX(-15px) translateX(-50%);
}

.react-flow__panel.left {
  left: 0;
}

.react-flow__panel.right {
  right: 0;
}

.react-flow__panel.left.center, .react-flow__panel.right.center {
  top: 50%;
  transform: translateY(-15px) translateY(-50%);
}

.react-flow__attribution {
  font-size: 10px;
  background: var(--xy-attribution-background-color, var(--xy-attribution-background-color-default));
  padding: 2px 3px;
  margin: 0;
}

.react-flow__attribution a {
  text-decoration: none;
  color: #999;
}

@keyframes dashdraw {
  from {
    stroke-dashoffset: 10;
  }
}
.react-flow__edgelabel-renderer {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  left: 0;
  top: 0;
}

.react-flow__viewport-portal {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.react-flow__minimap {
  background: var(--xy-minimap-background-color-props, var(--xy-minimap-background-color, var(--xy-minimap-background-color-default)));
}

.react-flow__minimap-svg {
  display: block;
}

.react-flow__minimap-mask {
  fill: var(--xy-minimap-mask-background-color-props, var(--xy-minimap-mask-background-color, var(--xy-minimap-mask-background-color-default)));
  stroke: var(--xy-minimap-mask-stroke-color-props, var(--xy-minimap-mask-stroke-color, var(--xy-minimap-mask-stroke-color-default)));
  stroke-width: var(--xy-minimap-mask-stroke-width-props, var(--xy-minimap-mask-stroke-width, var(--xy-minimap-mask-stroke-width-default)));
}

.react-flow__minimap-node {
  fill: var(--xy-minimap-node-background-color-props, var(--xy-minimap-node-background-color, var(--xy-minimap-node-background-color-default)));
  stroke: var(--xy-minimap-node-stroke-color-props, var(--xy-minimap-node-stroke-color, var(--xy-minimap-node-stroke-color-default)));
  stroke-width: var(--xy-minimap-node-stroke-width-props, var(--xy-minimap-node-stroke-width, var(--xy-minimap-node-stroke-width-default)));
}

.react-flow__background-pattern.dots {
  fill: var(--xy-background-pattern-color-props, var(--xy-background-pattern-color, var(--xy-background-pattern-dots-color-default)));
}

.react-flow__background-pattern.lines {
  stroke: var(--xy-background-pattern-color-props, var(--xy-background-pattern-color, var(--xy-background-pattern-lines-color-default)));
}

.react-flow__background-pattern.cross {
  stroke: var(--xy-background-pattern-color-props, var(--xy-background-pattern-color, var(--xy-background-pattern-cross-color-default)));
}

.react-flow__controls {
  display: flex;
  flex-direction: column;
  box-shadow: var(--xy-controls-box-shadow, var(--xy-controls-box-shadow-default));
}

.react-flow__controls.horizontal {
  flex-direction: row;
}

.react-flow__controls-button {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 26px;
  width: 26px;
  padding: 4px;
  border: none;
  background: var(--xy-controls-button-background-color, var(--xy-controls-button-background-color-default));
  border-bottom: 1px solid var(--xy-controls-button-border-color-props, var(--xy-controls-button-border-color, var(--xy-controls-button-border-color-default)));
  color: var(--xy-controls-button-color-props, var(--xy-controls-button-color, var(--xy-controls-button-color-default)));
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.react-flow__controls-button svg {
  width: 100%;
  max-width: 12px;
  max-height: 12px;
  fill: currentColor;
}

.react-flow__edge.updating .react-flow__edge-path {
  stroke: #777;
}

.react-flow__edge-text {
  font-size: 10px;
}

.react-flow__node.selectable:focus,
.react-flow__node.selectable:focus-visible {
  outline: none;
}

.react-flow__node-input,
.react-flow__node-default,
.react-flow__node-output,
.react-flow__node-group {
  padding: 10px;
  border-radius: var(--xy-node-border-radius, var(--xy-node-border-radius-default));
  width: 150px;
  font-size: 12px;
  color: var(--xy-node-color, var(--xy-node-color-default));
  text-align: center;
  border: var(--xy-node-border, var(--xy-node-border-default));
  background-color: var(--xy-node-background-color, var(--xy-node-background-color-default));
}

.react-flow__node-input.selectable:hover, .react-flow__node-default.selectable:hover, .react-flow__node-output.selectable:hover, .react-flow__node-group.selectable:hover {
  box-shadow: var(--xy-node-boxshadow-hover, var(--xy-node-boxshadow-hover-default));
}

.react-flow__node-input.selectable.selected,
.react-flow__node-input.selectable:focus,
.react-flow__node-input.selectable:focus-visible,
.react-flow__node-default.selectable.selected,
.react-flow__node-default.selectable:focus,
.react-flow__node-default.selectable:focus-visible,
.react-flow__node-output.selectable.selected,
.react-flow__node-output.selectable:focus,
.react-flow__node-output.selectable:focus-visible,
.react-flow__node-group.selectable.selected,
.react-flow__node-group.selectable:focus,
.react-flow__node-group.selectable:focus-visible {
  box-shadow: var(--xy-node-boxshadow-selected, var(--xy-node-boxshadow-selected-default));
}

.react-flow__node-group {
  background-color: var(--xy-node-group-background-color, var(--xy-node-group-background-color-default));
}

.react-flow__nodesselection-rect,
.react-flow__selection {
  background: var(--xy-selection-background-color, var(--xy-selection-background-color-default));
  border: var(--xy-selection-border, var(--xy-selection-border-default));
}

.react-flow__nodesselection-rect:focus,
.react-flow__nodesselection-rect:focus-visible,
.react-flow__selection:focus,
.react-flow__selection:focus-visible {
  outline: none;
}

.react-flow__controls-button:hover {
  background: var(--xy-controls-button-background-color-hover-props, var(--xy-controls-button-background-color-hover, var(--xy-controls-button-background-color-hover-default)));
  color: var(--xy-controls-button-color-hover-props, var(--xy-controls-button-color-hover, var(--xy-controls-button-color-hover-default)));
}

.react-flow__controls-button:disabled {
  pointer-events: none;
}

.react-flow__controls-button:disabled svg {
  fill-opacity: 0.4;
}

.react-flow__controls-button:last-child {
  border-bottom: none;
}

.react-flow__controls.horizontal .react-flow__controls-button {
  border-bottom: none;
  border-right: 1px solid var(--xy-controls-button-border-color-props, var(--xy-controls-button-border-color, var(--xy-controls-button-border-color-default)));
}

.react-flow__controls.horizontal .react-flow__controls-button:last-child {
  border-right: none;
}

.react-flow__resize-control {
  position: absolute;
}

.react-flow__resize-control.left,
.react-flow__resize-control.right {
  cursor: ew-resize;
}

.react-flow__resize-control.top,
.react-flow__resize-control.bottom {
  cursor: ns-resize;
}

.react-flow__resize-control.top.left,
.react-flow__resize-control.bottom.right {
  cursor: nwse-resize;
}

.react-flow__resize-control.bottom.left,
.react-flow__resize-control.top.right {
  cursor: nesw-resize;
}

/* handle styles */
.react-flow__resize-control.handle {
  width: 5px;
  height: 5px;
  border: 1px solid #fff;
  border-radius: 1px;
  background-color: var(--xy-resize-background-color, var(--xy-resize-background-color-default));
  translate: -50% -50%;
}

.react-flow__resize-control.handle.left {
  left: 0;
  top: 50%;
}

.react-flow__resize-control.handle.right {
  left: 100%;
  top: 50%;
}

.react-flow__resize-control.handle.top {
  left: 50%;
  top: 0;
}

.react-flow__resize-control.handle.bottom {
  left: 50%;
  top: 100%;
}

.react-flow__resize-control.handle.top.left {
  left: 0;
}

.react-flow__resize-control.handle.bottom.left {
  left: 0;
}

.react-flow__resize-control.handle.top.right {
  left: 100%;
}

.react-flow__resize-control.handle.bottom.right {
  left: 100%;
}

/* line styles */
.react-flow__resize-control.line {
  border-color: var(--xy-resize-background-color, var(--xy-resize-background-color-default));
  border-width: 0;
  border-style: solid;
}

.react-flow__resize-control.line.left,
.react-flow__resize-control.line.right {
  width: 1px;
  transform: translate(-50%, 0);
  top: 0;
  height: 100%;
}

.react-flow__resize-control.line.left {
  left: 0;
  border-left-width: 1px;
}

.react-flow__resize-control.line.right {
  left: 100%;
  border-right-width: 1px;
}

.react-flow__resize-control.line.top,
.react-flow__resize-control.line.bottom {
  height: 1px;
  transform: translate(0, -50%);
  left: 0;
  width: 100%;
}

.react-flow__resize-control.line.top {
  top: 0;
  border-top-width: 1px;
}

.react-flow__resize-control.line.bottom {
  border-bottom-width: 1px;
  top: 100%;
}

.react-flow__edge-textbg {
  fill: var(--xy-edge-label-background-color, var(--xy-edge-label-background-color-default));
}

.react-flow__edge-text {
  fill: var(--xy-edge-label-color, var(--xy-edge-label-color-default));
}

/*# sourceMappingURL=style.css.map*/